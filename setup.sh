#!/bin/bash

# Function to check if git is installed
check_git_installed() {
  if ! command -v git &>/dev/null; then
    echo ""
    echo "==============================="
    echo "Git is not installed. Please install Git and try again."
    echo "==============================="
    echo ""
    exit 1 # Exit the script if git is not installed
  fi
}

# Function to check and create .env file if it doesn't exist
create_env_file() {
  if [ ! -f .env ]; then
    echo ""
    echo "==============================="
    echo "Creating .env file..."
    echo "==============================="
    echo ""

    # Prompt the user for environment variables and their default values
    echo "Please provide the following environment variables (default values will be used if left empty):"
    read -p "SECRET_KEY (used for Flask sessions and cookies): " SECRET_KEY
    read -p "UPLOAD_FOLDER (default: 'uploads'): " UPLOAD_FOLDER
    read -p "PODCAST_FOLDER (default: 'podcasts'): " PODCAST_FOLDER
    read -p "DATABASE_URI (default: 'sqlite:///prod.db'): " DATABASE_URI
    read -p "DEV_DATABASE_URI (default: 'sqlite:///dev.db'): " DEV_DATABASE_URI
    read -p "TEST_DATABASE_URI (default: 'sqlite:///test.db'): " TEST_DATABASE_URI

    # Prompt the user for credentials (required values)

    while [ -z "$YOUTUBE_API_KEY" ]; do
      read -p "YOUTUBE_API_KEY (cannot be empty): " YOUTUBE_API_KEY
    done
    while [ -z "$VITE_CLERK_PUBLISHABLE_KEY" ]; do
      read -p "VITE_CLERK_PUBLISHABLE_KEY (cannot be empty): " VITE_CLERK_PUBLISHABLE_KEY
    done

    while [ -z "$CLERK_SECRET_KEY" ]; do
      read -p "CLERK_SECRET_KEY (cannot be empty): " CLERK_SECRET_KEY
    done

    # Default values if the user doesn't provide any
    SECRET_KEY=${SECRET_KEY:-"your_secret_key_here"}
    UPLOAD_FOLDER=${UPLOAD_FOLDER:-"uploads"}
    PODCAST_FOLDER=${PODCAST_FOLDER:-"podcasts"}
    DATABASE_URI=${DATABASE_URI:-"sqlite:///prod.db"}
    DEV_DATABASE_URI=${DEV_DATABASE_URI:-"sqlite:///dev.db"}
    TEST_DATABASE_URI=${TEST_DATABASE_URI:-"sqlite:///test.db"}

    # Write the values to .env file
    echo ""
    echo "Writing values to .env file..."

    # Begin writing to .env
    echo "# .env file generated by create_env_file script" >.env
    echo "" >>.env

    # Clerk settings
    echo "# Clerk Authentication" >>.env
    echo "VITE_CLERK_PUBLISHABLE_KEY=$VITE_CLERK_PUBLISHABLE_KEY" >>.env
    echo "CLERK_SECRET_KEY=$CLERK_SECRET_KEY" >>.env
    echo "" >>.env

    # General settings
    echo "# General settings" >>.env
    echo "SECRET_KEY=$SECRET_KEY" >>.env
    echo "UPLOAD_FOLDER=$UPLOAD_FOLDER" >>.env
    echo "PODCAST_FOLDER=$PODCAST_FOLDER" >>.env
    echo "" >>.env

    # Database URIs
    echo "# Database URIs" >>.env
    echo "DATABASE_URI=$DATABASE_URI" >>.env
    echo "DEV_DATABASE_URI=$DEV_DATABASE_URI" >>.env
    echo "TEST_DATABASE_URI=$TEST_DATABASE_URI" >>.env
    echo "" >>.env

    # YouTube API key
    echo "# YouTube API key" >>.env
    echo "YOUTUBE_API_KEY=$YOUTUBE_API_KEY" >>.env
    echo "" >>.env

    echo "==============================="
    echo ".env file created successfully!"
    echo "==============================="
    echo ""
  else
    echo ""
    echo "==============================="
    echo ".env file already exists. Please ensure it contains the correct values."
    echo "==============================="
    echo ""
  fi
}

# Check if git is installed
check_git_installed

# Install Python dependencies
echo ""
echo "==============================="
echo "Installing Python dependencies..."
echo "==============================="
echo ""
pip install -r requirements.txt

# Install JavaScript dependencies
echo ""
echo "==============================="
echo "Installing JS dependencies from package.json..."
echo "==============================="
echo ""
npm install

# Fixing errors
echo ""
echo "==============================="
echo "Fixing potential errors..."
echo "==============================="
echo ""
npm audit fix

# Create .env file if it doesn't exist
create_env_file

# Start the Flask development server
echo ""
echo "==============================="
echo "Starting the development server..."
echo "==============================="
echo ""
flask run
